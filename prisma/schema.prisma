// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id              Int      @id @default(autoincrement())
  roomName        String
  roomDescription String
  roomHash        String   @unique
  currency        Currency @relation(fields: [currencyId], references: [id])
  currencyId      Int

  Users Users[]

  Expense Expense[]
}

model Currency {
  id     Int    @id @default(autoincrement())
  symbol String @unique
  name   String

  Room Room[]
}

model Users {
  id        Int       @id @default(autoincrement())
  userName  String
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    Int
  Expense   Expense[]
  settlesTo Settles[] @relation(name: "UserToSettles")
  settlesBy Settles[] @relation(name: "UserBySettles")
}

model Expense {
  id     Int    @id @default(autoincrement())
  roomId Int
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  name   String
  amount Float

  spentById Int
  spentBy   Users @relation(fields: [spentById], references: [id])
}

model Settles {
  id Int @id @default(autoincrement())

  owedTo Int
  userTo Users @relation(name: "UserToSettles", fields: [owedTo], references: [id])

  owedBy Int
  userBy Users @relation(name: "UserBySettles", fields: [owedBy], references: [id])

  amount Int
}
